services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.135.3
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      DB_USERNAME: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
      DB_DATABASE_NAME: immich
    volumes:
      - /volume1/photos:/usr/src/app/upload
      - /volume1/Fotos:/Fotos
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "2283:2283"
    healthcheck:
      disable: false
    networks:
      - prod_net
    depends_on:
      - redis
      - database
    devices:
      - /dev/dri:/dev/dri
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding

  #immich-machine-learning:
  #  container_name: immich_machine_learning
  #  # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
  #  # Example tag: ${IMMICH_VERSION:-release}-cuda
  #  image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
  #  # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
  #  #   file: hwaccel.ml.yml
  #  #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version #for WSL2 where applicable
  #  volumes:
  #    - model-cache:/cache
  #  env_file:
  #    - .env
  #  restart: always
  #  healthcheck:
  #    disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:facc1d2c3462975c34e10fccb167bfa92b0e0dbd992fc282c29a61c3243afb11
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - prod_net

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - /volume2/docker/immich_pgsql/volumes/data:/var/lib/postgresql/data
    networks:
      - prod_net

networks:
  prod_net:
    external: true